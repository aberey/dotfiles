# Setting the prefix from C-b to C-a
set -g prefix C-a  

# Free the original Ctrl-b prefix keybinding
unbind C-b 

#setting the delay between prefix and command
set -s escape-time 1

# Ensure that we can send Ctrl-A to other apps
bind C-a send-prefix

# Set the base index for windows to 1 instead of 0
set -g base-index 1

# Set the base index for panes to 1 instead of 0
setw -g pane-base-index 1

# Reload the file with Prefix r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# splitting panes
bind | split-window -h
bind - split-window -v

# moving between panes
bind h select-pane -L 
bind j select-pane -D 
bind k select-pane -U
bind l select-pane -R    

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}'

# Quick pane selection
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Pane resizing
bind -r H resize-pane -L 5 
bind -r J resize-pane -D 5 
bind -r K resize-pane -U 5 
bind -r L resize-pane -R 5

bind + run "if [[ $(tmux list-window) =~ ZOOM ]]; then tmux last-window; tmux swap-pane -s ZOOM.1; tmux kill-window -t ZOOM; else tmux new-window -d -n ZOOM; tmux swap-pane -s ZOOM.1; tmux select-window -t ZOOM;fi"

# set shell to zsh 
set -g default-command "reattach-to-user-namespace -l /bin/zsh"
set -g default-shell /bin/zsh
 
# mouse support 
# mouse copy/paste works with shift
# outdated 1.8 options:
#setw -g mode-mouse on
#set -g mouse-select-pane on
#set -g mouse-resize-pane on
#set -g mouse-select-window on
#bind -n WheelUpPane   select-pane -t= \; copy-mode -e \; send-keys -M
#bind -n WheelDownPane select-pane -t= \;                 send-keys -M

#set -g mouse-utf8 on
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M; send-keys -M; send-keys -M; send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M; send-keys -M; send-keys -M; send-keys -M' 'copy-mode -e; send-keys -M; send-keys -M; send-keys -M; send-keys -M'"
bind -n WheelDownPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M; send-keys -M; send-keys -M; send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M; send-keys -M; send-keys -M; send-keys -M' 'copy-mode -e; send-keys -M; send-keys -M; send-keys -M; send-keys -M'"

# Set the default terminal mode to 256color mode
set -g default-terminal "screen-256color" 

# enable activity alerts
setw -g monitor-activity on
set -g visual-activity on

# enable vi keys.
setw -g mode-keys vi

#unbind [
#bind Escape copy-mode
unbind p

# outdated copy mode - replaced by pbcopy below
#bind p paste-buffer
#bind -t vi-copy 'v' begin-selection
#bind -t vi-copy 'y' copy-selection

# pbcopy pbpaste integration for mac osx
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
bind p run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

set-option -g status on
set-option -g status-interval 2
#set-option -g status-utf8 on
set-option -g status-justify "centre"
set-option -g status-left-length 80
set-option -g status-right-length 80

# outdated tmux-powerline - now using powerline
#set-option -g status-left "#(~/tmux-powerline/status-left.sh)"
#set-option -g status-right "#(~/tmux-powerline/status-right.sh)"
#
#source {{powerline_path.stdout}}/bindings/tmux/powerline.conf

run-shell "powerline-daemon -q"
source ~/Library/Python/2.7/lib/python/site-packages/powerline/bindings/tmux/powerline.conf
#source ~/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf

#### COLOUR (Solarized 256)

# default statusbar colors
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour colour64 #green


# List of plugins
# Supports `github_username/repo` or full git URLs
set -g @tpm_plugins "              \
	tmux-plugins/tpm                 \
	tmux-plugins/tmux-sensible       \
  tmux-plugins/tmux-resurrect			 \
"
# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# New window with default path set to last path
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# keystroke time
set -sg escape-time 1

# save/restore sessions
set -g @resurrect-save 's'
set -g @resurrect-restore 'r'

# initializes TMUX plugin manager
run-shell ~/.tmux/plugins/tpm/tpm


# This tmux statusbar config was created by tmuxline.vim
# on Wed, 01 Jun 2016

set -g status-bg "colour236"
set -g message-command-fg "colour253"
set -g status-justify "centre"
set -g status-left-length "100"
set -g status "on"
set -g pane-active-border-fg "colour107"
set -g message-bg "colour239"
set -g status-right-length "100"
set -g status-right-attr "none"
set -g message-fg "colour253"
set -g message-command-bg "colour239"
set -g status-attr "none"
set -g status-utf8 "on"
set -g pane-border-fg "colour239"
set -g status-left-attr "none"
setw -g window-status-fg "colour244"
setw -g window-status-attr "none"
setw -g window-status-activity-bg "colour236"
setw -g window-status-activity-attr "none"
setw -g window-status-activity-fg "colour107"
setw -g window-status-separator ""
setw -g window-status-bg "colour236"
set -g status-left "#[fg=colour236,bg=colour107] #S #[fg=colour107,bg=colour239,nobold,nounderscore,noitalics]#[fg=colour253,bg=colour239] #F #[fg=colour239,bg=colour236,nobold,nounderscore,noitalics]#[fg=colour244,bg=colour236] #W #[fg=colour236,bg=colour236,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=colour236,bg=colour236,nobold,nounderscore,noitalics]#[fg=colour244,bg=colour236] %a #[fg=colour239,bg=colour236,nobold,nounderscore,noitalics]#[fg=colour248,bg=colour239] %b %d  %R #[fg=colour246,bg=colour239,nobold,nounderscore,noitalics]#[fg=colour236,bg=colour246] #H "
setw -g window-status-format "#[fg=colour236,bg=colour236,nobold,nounderscore,noitalics]#[default] #I  #W #[fg=colour236,bg=colour236,nobold,nounderscore,noitalics]"
setw -g window-status-current-format "#[fg=colour236,bg=colour239,nobold,nounderscore,noitalics]#[fg=colour253,bg=colour239] #I  #W #[fg=colour239,bg=colour236,nobold,nounderscore,noitalics]"
